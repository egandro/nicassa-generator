////////////////////////////////////////////////////////////////////
//
// GENERATED CLASS
//
// DO NOT EDIT
//
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
// Retrofit Configuration
////////////////////////////////////////////////////////////////////

package <%- namespace%>;

import java.util.concurrent.TimeUnit;

import okhttp3.OkHttpClient;
import retrofit2.Retrofit;
import retrofit2.converter.jackson.JacksonConverterFactory;
import retrofit2.converter.scalars.ScalarsConverterFactory;

public class Configuration {
    public static Retrofit getConnection(String baseUrl) {
        Retrofit result = new Retrofit.Builder()
            .addConverterFactory(ScalarsConverterFactory.create())
            .addConverterFactory(JacksonConverterFactory.create())
            .baseUrl(baseUrl)
            .build();
        return result;
    }

    public static Retrofit getConnection(String baseUrl, int timeout) {
        return getConnection(baseUrl, timeout, timeout);
    }

    public static Retrofit getConnection(String baseUrl, int connectTimeout, int readWriteTimeout) {
        OkHttpClient client = new OkHttpClient.Builder()
                .connectTimeout(connectTimeout, TimeUnit.SECONDS)
                .writeTimeout(readWriteTimeout, TimeUnit.SECONDS)
                .readTimeout(readWriteTimeout, TimeUnit.SECONDS)
                .build();

        Retrofit result = new Retrofit.Builder()
                .addConverterFactory(ScalarsConverterFactory.create())
                .addConverterFactory(JacksonConverterFactory.create())
                .client(client)
                .baseUrl(baseUrl)
                .build();
        return result;
    }
}
